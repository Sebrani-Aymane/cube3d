hooks done(left and right arrow to move the POV) (A ==> go left) (D ==> go right) (W ==> go up) (A ==> go back)
draw 2d done
draw the player done
draw the POV done
render walls done


/////////////////////////////////////////////////////////////////////

1. tracing.c:
   - map_tracing: Map tracing functionality.  

   - initialize_mlx: Manages graphics and windows.  

   - initialize_map_settings: Calculates the dimensions (horizontal and vertical sizes).  

   - keys_control.c: setup_hooks: Sets up the key control hooks.  

   -render_frame: 2.

2. draw.c: 
   - draw2d: Used for drawing in 2D.  

   - draw_grid: Draws a grid with horizontal and vertical lines covering the entire window.

3. pov.c: 
   - draw_pov: Draws the players field of view (POV) by tracing multiple rays to visualize detected walls.  

   - check_wall_collision: Simulates a ray to detect the first collision with a wall by progressively advancing.
   
4. cast.c /cast2.:  
   - cast_rays: Iterates through all rays in the players field of view, detecting horizontal 
                and vertical collisions for each ray and determining the closest one. Finalizes each ray.  

   - calculate_distance: Computes the Euclidean distance between two points (x1, y1) and (x2, y2).  

   - choose_closest_hit: Compares the distances of horizontal and vertical collisions
                         to determine the closest collision and updates ray information (`t_rays`).  

   - finalize_ray: Adjusts the rays distance to eliminate distortion caused by projection and updates its angle.  

   - normal_angle: Normalizes a given angle to a range between 0 and \(2\pi\).  

   - initialize_ray: Configures the rays properties (facing_up, facing_down, facing_left, facing_right) based on its angle.  

   - find_horizontal_hit: Searches for the rays first horizontal collision with a wall by traversing the grid.  

   - find_vertical_hit Searches for the rays first vertical collision with a wall by traversing the grid.  

   - draw_walls: Projects walls onto the screen based on ray distances. Adds a ceiling and floor to complete the scene.
   
   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

prtoections for destance left to wall

consider updating mlx->range_ho_size & mlx->range_ve_size to one value to be the TILE, 
cuz every time the map changes in leght the shape of the cub does change also. 